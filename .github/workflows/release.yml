name: Release
on:
  push:
    branches: [ "release" ]
  workflow_dispatch:

jobs:
  build:
    environment: code-signing
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - run: base64 --decode >signing.keystore <<< "${{ secrets.CODE_SIGNING_KEYSTORE }}"
    - run: keytool -list -keystore signing.keystore -storepass changeit
    - name: Build with Tycho
      run: mvn --batch-mode -Dtycho.disableP2Mirrors=true -Dcode-signing-keystore=\"$(realpath signing.keystore)\" clean verify --file pom.xml -e
    - run: rm signing.keystore
    - name: Upload repository
      uses: actions/upload-artifact@v3
      with:
        name: repository
        path: 'repository/target/repository/'
    - uses: actions/upload-pages-artifact@v1
      with:
        path: './repository/target/repository/'
    - id: versionReader
      run: echo VERSION=$(python3 repository/releng/bump_patch_version.py current_version)>>"$GITHUB_OUTPUT"
    - run: echo Version:${{ steps.versionReader.outputs.VERSION }}
    - run: python3 repository/releng/bump_patch_version.py bump
    - run: echo VERSION=$(python3 repository/releng/bump_patch_version.py current_version)>>"$GITHUB_OUTPUT"
      id: versionAfter
    - name: Add & Commit
      uses: EndBug/add-and-commit@v9.1.3
      with:
        message: "Version ${{ steps.versionAfter.outputs.VERSION }}"
    - run: cd repository/target/repository/ && zip -r ../../../repository.zip .
    - name: Create release ${{ needs.build.outputs.VERSION }}
      uses: softprops/action-gh-release@v1
      with: 
          tag_name: releases/${{ steps.versionReader.outputs.VERSION }}
          name: ${{ steps.versionReader.outputs.VERSION }}
          target_commitish: ${{ github.sha }}
          files: './repository.zip'
          draft: false
          prerelease: false          
  deploy:
    needs: build
    runs-on: ubuntu-latest
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2
    
